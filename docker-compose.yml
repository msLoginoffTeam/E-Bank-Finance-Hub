version: '3.8'  

services:
  auth:    
    build:  
      context: . 
      dockerfile: AuthDockerfile
    ports:  
      - "8083:8080"
    environment:
      AUTH_DATABASE_CONNECTION: ${AUTH_DATABASE_CONNECTION}
      RABBITMQ_CONNECTION: ${RABBITMQ_CONNECTION}
    networks:  
      - network
    depends_on:  
      - db
      - rabbitmq 
  
  core:    
    build:  
      context: . 
      dockerfile: CoreDockerfile
    ports:  
      - "8080:8080"
    environment:
      CORE_DATABASE_CONNECTION: ${CORE_DATABASE_CONNECTION}
      RABBITMQ_CONNECTION: ${RABBITMQ_CONNECTION}
    networks:  
      - network
    depends_on:  
      - db
      - rabbitmq 

  credit:    
    build:  
      context: . 
      dockerfile: CreditDockerfile
    ports:  
      - "8081:8080"
    environment:
      CREDIT_DATABASE_CONNECTION: ${CREDIT_DATABASE_CONNECTION}
      RABBITMQ_CONNECTION: ${RABBITMQ_CONNECTION}
    networks:  
      - network
    depends_on:  
      - db
      - rabbitmq 

  user:    
    build:  
      context: . 
      dockerfile: UserDockerfile
    ports:  
      - "8082:8080"
    environment:
      USER_DATABASE_CONNECTION: ${USER_DATABASE_CONNECTION}
      RABBITMQ_CONNECTION: ${RABBITMQ_CONNECTION}
    networks:  
      - network
    depends_on:  
      - db
      - rabbitmq 

  db:  
    image: postgres:latest
    container_name: db
    ports:  
      - "5432:5432" 
    environment:  
      POSTGRES_DB: ${POSTGRES_DB} 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}    
    volumes:  
      - dbData:/var/lib/postgresql/data
    networks:  
      - network

  rabbitmq:  
    image: rabbitmq:4.0-management  
    container_name: rabbitmq  
    ports:  
      - "5672:5672" 
      - "15672:15672" 
    networks:  
      - network

networks:  
  network:  
    driver: bridge

volumes:  
  dbData: