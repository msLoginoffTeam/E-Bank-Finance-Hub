// <auto-generated />
using System;
using CreditService_Patterns.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Credit_Api.Migrations
{
    [DbContext(typeof(CreditServiceContext))]
    partial class CreditServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CreditService_Patterns.Models.dbModels.ClientCreditDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreditPlanId")
                        .HasColumnType("uuid");

                    b.Property<int>("RemainingAmount")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreditPlanId");

                    b.ToTable("Credit");
                });

            modelBuilder.Entity("CreditService_Patterns.Models.dbModels.CreditPaymentDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientCreditId")
                        .HasColumnType("uuid");

                    b.Property<int>("PaymentAmount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientCreditId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("CreditService_Patterns.Models.dbModels.CreditPlanDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("PlanPercent")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("CreditService_Patterns.Models.dbModels.ClientCreditDbModel", b =>
                {
                    b.HasOne("CreditService_Patterns.Models.dbModels.CreditPlanDbModel", "CreditPlan")
                        .WithMany()
                        .HasForeignKey("CreditPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditPlan");
                });

            modelBuilder.Entity("CreditService_Patterns.Models.dbModels.CreditPaymentDbModel", b =>
                {
                    b.HasOne("CreditService_Patterns.Models.dbModels.ClientCreditDbModel", "ClientCredit")
                        .WithMany()
                        .HasForeignKey("ClientCreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientCredit");
                });
#pragma warning restore 612, 618
        }
    }
}
